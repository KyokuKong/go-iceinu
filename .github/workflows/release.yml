# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: release

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  tags:
    - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22.5'
        
    - name: Install dependencies
      working-directory: ./bot
      run: go mod tidy

    - name: Build for Linux x64
      working-directory: ./bot
      run: GOOS=linux GOARCH=amd64 go build -o build/go-iceinu-linux-amd64-${{ github.ref_name }} .

    - name: Build for Windows x64
      working-directory: ./bot
      run: GOOS=windows GOARCH=amd64 go build -o build/go-iceinu-windows-amd64-${{ github.ref_name }}.exe .

    - name: Upload Linux binary
      uses: actions/upload-artifact@v3
      with:
        name: go-iceinu-linux-amd64-${{ github.ref_name }}
        path: ./bot/build/go-iceinu-linux-amd64-${{ github.ref_name }}

    - name: Upload Windows binary
      uses: actions/upload-artifact@v3
      with:
        name: go-iceinu-windows-amd64-${{ github.ref_name }}
        path: ./bot/build/go-iceinu-windows-amd64-${{ github.ref_name }}.exe

    - name: Create GitHub Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/create-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        release_name: ${{ github.ref_name }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Linux binary to Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./bot/build/go-iceinu-linux-amd64-${{ github.ref_name }}
        asset_name: go-iceinu-linux-amd64-${{ github.ref_name }}
        asset_content_type: application/octet-stream
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Windows binary to Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./bot/build/go-iceinu-windows-amd64-${{ github.ref_name }}.exe
        asset_name: go-iceinu-windows-amd64-${{ github.ref_name }}.exe
        asset_content_type: application/octet-stream
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
